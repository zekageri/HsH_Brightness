class hsBrightness extends HTMLElement{template='\n    <span class="hs-brightness-lower"></span>\n    <span class="hs-brightness-handle" draggable="true">\n        <span draggable="false" class="hs-brightness-percent-holder noselect"></span>\n    </span>';minHandleHeight=20;handleHeight=20;maxNightBright=20;nightBright=10;brightness=50;maxBrightness=100;fullHeight_Pixel=250;lastEvtVal=0;currPixel=0;elements={handle:null,percent:null,body:null};userEvents={drag:null,stop:null};connectedCallback(){this.id=this.getAttribute("id"),this.id&&""!==this.id?(this.cssRoot=document.querySelector(":root"),this.innerHTML=this.template,this.setFullHeight(this.fullHeight_Pixel),this.getOptions(),this.setHandleHeight(this.handleHeight),this.getElements(),this.handleDragEvent(),this.setLoadStates()):console.error("[HSH-Brightness] - Brightness should have an ID.")}on(t,e){this.userEvents.hasOwnProperty(t)?this.userEvents[t]=e:console.error(`[HSH-Brightness] - No such event as ${t}`)}getOptions(){this.brightness=parseInt(this.getAttribute("brightness")),this.maxNightBright=parseInt(this.getAttribute("maxNightBright")),this.nightBright=parseInt(this.getAttribute("nightBright")),this.nightMode="true"==this.getAttribute("nightmode")?"true":"false"}setLoadStates(){let t=this.brightness;this.nightMode&&(t=this.nightBright),this.setNightMode(this.nightMode),this.setBrightness(t)}setNightMode(t){this.nightMode=t,this.setAttribute("nightmode",t),!0===this.nightMode?this.maxBrightness=this.maxNightBright:this.maxBrightness=100}setBrightness(t){this.setAttribute("brightness",t),this.nightMode?(this.nightBright=t,this.getNightPixelFromPercent(t)):(this.getPixelFromPercent(t),this.brightness=t),this.setVisualPercent(t)}setFullHeight(t){this.fullHeight_Pixel=t,this.fullHeight_Pixel>300&&(this.fullHeight_Pixel=300,console.error("[HSH-Brightness] - Maximum full height is 300px!")),this.cssRoot.style.setProperty("--hsh-brightness-height",`${this.fullHeight_Pixel}px`)}setHandleHeight(t){this.handleHeight=t,this.handleHeight<this.minHandleHeight&&(this.handleHeight=this.minHandleHeight,console.error(`[HSH-Brightness] - Minimum handle height is ${this.minHandleHeight}px!`)),this.cssRoot.style.setProperty("--hsh-brightness-handle-height",`${this.handleHeight}px`)}getElements(){this.elements.handle=this.querySelector(".hs-brightness-handle"),this.elements.percent=this.querySelector(".hs-brightness-percent-holder"),this.elements.body=this.querySelector(".hs-brightness-lower")}getCorrectHandleHeight(){return this.handleHeight/2/this.fullHeight_Pixel*100}getNightPixelFromPercent(t){let e=t/this.maxNightBright*this.fullHeight_Pixel;this.currPixel=this.clamp(e,0,this.fullHeight_Pixel)}getPixelFromPercent(t){let e=this.fullHeight_Pixel/100*t;this.currPixel=this.clamp(e,0,this.fullHeight_Pixel)}setVisualPercent(t){this.brightness=this.clamp(t,0,100),this.setAttribute("brightness",this.brightness),this.elements.percent.innerText=`${this.brightness}%`,this.elements.body.style.height=`${this.currPixel}px`,this.elements.handle.style.bottom=this.currPixel-this.handleHeight/2+"px",this.currPixel>=this.fullHeight_Pixel-15?this.classList.add("atFull"):this.classList.remove("atFull")}emit(t,e){null!==this.userEvents[t]&&this.lastEvtVal!==e&&(this.lastEvtVal=e,this.userEvents[t](e))}handleDragEvent(){let t=this;["drag","touchmove"].forEach((e=>t.elements.handle.addEventListener(e,(function(e){const s=e.target.parentElement.getBoundingClientRect();let i;if(i="drag"==e.type?e.clientY-s.bottom:e.touches[0].pageY-s.bottom,i>0||i<-t.fullHeight_Pixel-10)return;t.currPixel=Math.abs(i);let h=Math.floor(t.maxBrightness/t.fullHeight_Pixel*Math.abs(i));return t.setVisualPercent(h),t.emit("drag",t.brightness),e.preventDefault(),!1}),!1))),["dragstart","touchstart","click"].forEach((e=>t.elements.handle.addEventListener(e,(function(e){let s=t.elements.handle.closest("body");if(s&&(s.style["overscroll-behavior"]="contain",s.style["touch-action"]="none"),"click"!=e.type)return t.setAttribute("touching",!0),e.dataTransfer.setDragImage(document.createElement("span"),0,0),window.getSelection().removeAllRanges(),!1}),!1))),["dragend","touchend"].forEach((e=>t.elements.handle.addEventListener(e,(function(e){null!==t.userEvents.stop&&t.userEvents.stop(t.percent);let s=t.elements.handle.closest("body");return s&&(s.style["touch-action"]="auto"),t.setAttribute("touching",!1),!1}),!1)))}clamp(t,e=0,s=100){return t>s?s:t<e?e:t}}customElements.define("hs-brightness",hsBrightness);